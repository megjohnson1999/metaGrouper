name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas scipy scikit-learn matplotlib seaborn
        pip install pytest flake8
        # Try to install optional dependencies but don't fail if they don't work
        pip install datasketch || echo "datasketch not available"
        pip install scikit-bio || echo "scikit-bio not available"
    
    - name: Check syntax errors only
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=hmp_raw_data,hmp_preprocessed,metagrouper_package/metagrouper.log
    
    - name: Test core functionality (minimal)
      run: |
        python test_ci_minimal.py
    
    - name: Test comprehensive modular architecture
      run: |
        cd metagrouper_package
        python test_metagrouper.py
    
    - name: Test minimal workflow
      run: |
        # Create minimal test data
        mkdir -p test_data
        echo -e '@read1\nATCGATCGATCGATCGATCGATCGATCGATCGATCGATCG\n+\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' > test_data/sample1.fastq
        echo -e '@read2\nGCTAGCTAGCTAGCTAGCTAGCTAGCTAGCTAGCTAGCTA\n+\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' > test_data/sample2.fastq
        
        # Test basic analysis from metagrouper_package directory
        cd metagrouper_package
        python metagrouper.py ../test_data -o ../test_output -k 17 --max-reads 2 --sequential
        
        # Return to root and verify core outputs were created
        cd ..
        if [ -f test_output/distance_heatmap.png ]; then
          echo "✓ Analysis outputs created"
        else
          echo "❌ Analysis outputs missing"
          exit 1
        fi
        
        echo "✓ Minimal workflow test passed"
        
        # Cleanup
        rm -rf test_data test_output
    
    - name: Test help and version info
      run: |
        cd metagrouper_package
        python metagrouper.py --help
        echo "✓ Help command works"